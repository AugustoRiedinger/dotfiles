#+TITLE: Doom Emac's Config
#+AUTHOR: A. Riedinger
#+PROPERTY: header-args :tangle yes

* TABLE OF CONTENTS :toc:
- [[#general][GENERAL]]
- [[#packages][PACKAGES]]
  - [[#installing-packages][INSTALLING PACKAGES:]]
  - [[#dashboard][DASHBOARD]]
  - [[#latex][LATEX]]
  - [[#org-mode][ORG-MODE]]
  - [[#snippets][SNIPPETS]]

* GENERAL
:PROPERTIES:
:header-args: :tangle config.el
:END:

First set up full name and email adress:

#+begin_src emacs-lisp
(setq user-full-name "Augusto Riedinger"
      user-mail-address "riedinger.augusto@gmail.com")
#+end_src

Now, the theme is selected. I'm currently using Doom Emac's 'doom-one' default theme.

#+begin_src emacs-lisp
(setq doom-theme 'doom-one)
#+end_src

The following is an icon set that can be used with dashboard, dired, ibuffer and other Emacs programs:

#+begin_src emacs-lisp
(use-package all-the-icons)
#+end_src

Now, the line numbering is changed to relative but the current line number is mantained. The first line sets it globally and the second one does the trick.

#+begin_src emacs-lisp
(display-line-numbers-mode)
(setq display-line-numbers-type 'relative)
#+end_src

Finally the "+" buffers are enabled, in order to copy/paste from the system's keyboard. The default EVIL keybindings are currently used, i.e '"+y' to yank to the system's clipboard and '"+p' to paste from the system's clipboard.

#+begin_src emacs-lisp
(setq x-select-enable-clipboard t)
#+end_src

* PACKAGES

Here I set up and configure the different external packages. They are all installed in 'packages.el' (remember to do a 'doom sync' after changin 'packages.el')

** INSTALLING PACKAGES:
:PROPERTIES:
:header-args: :tangle packages.el
:END:

To install a package with Doom you must declare them here and run 'doom sync' on the command line, then restart Emacs for the changes to take effect -- or use 'M-x doom/reload'.

All packages installed are from MELPA, ELPA or emacsmirror:

*** Dashboard:

Here are the packages needed for Emacs Dashboard:
#+begin_src emacs-lisp
(package! evil-tutor)
(package! page-break-lines)
(package! projectile)
(package! all-the-icons)
(package! dashboard)
#+end_src

*** Yasnippets:

Here is the package for Yasnippets:
#+begin_src emacs-lisp
(package! yasnippet)
#+end_src

*** Org-bullets:

The following are packages for Org-bullets:

#+begin_src emacs-lisp
(package! org-bullets)
(package! org-superstar)
#+end_src

*** Latex:

This package is for editing .tex files:

#+begin_src emacs-lisp
(package! auctex)
#+end_src
*** Org-roam:

Installing org-roam:

#+begin_src emacs-lisp
(package! org-roam)
#+end_src

** DASHBOARD
:PROPERTIES:
:header-args: :tangle config.el
:END:

Emacs Dashboard is an extensible startup screen showing recent files, bookmars and more.

The following configurations are made in the following lines:
 + Default file and heading icons are set.
 + All the content is put at the centre of the screen.
 + The text at the bottom of the logo is changed.
 + The logo is changed from Doom's to the default Emacs logo.
 + Three items are set - recents, agenda and bookmarks - with its respective lengths.

#+begin_src emacs-lisp
(use-package dashboard
:init
(setq dashboard-set-heading-icons t)
(setq dashboard-set-file-icons t)
(setq dashboard-center-content t)
(setq dashboard-banner-logo-title "Emacs is more than a text editor!")
(setq dashboard-startup-banner 'logo)
(setq dashboard-items '((recents . 5)
                        (agenda . 5)
                        (bookmarks . 3)))
:config
(dashboard-setup-startup-hook)
#+end_src

The following setting ensures that emacsclient always opens on *dashboard* rather than *scratch*.

#+begin_src emacs-lisp
(setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
#+end_src

** LATEX
:PROPERTIES:
:header-args: :tangle config.el
:END:

Text highlight and latex functions are enabled in all .tex files:

#+begin_src emacs-lisp
(setq tex-dvi-view-command "xdvi")
(global-font-lock-mode t)
(add-hook 'org-mode-hook 'org-fragtog-mode)
(after! org (plist-put org-format-latex-options :scale 0.5))
#+end_src

Now we set up IEEEtran as a new '\documentclass'. It can be installed with 'texlive-publisher' from the Arch repository.

#+begin_src emacs-lisp
(with-eval-after-load 'ox-latex
   (add-to-list 'org-latex-classes
                '("IEEEtran" "\\documentclass{IEEEtran}"
                  ("\\section{%s}" . "\\section*{%s}")
                  ("\\subsection{%s}" . "\\subsection*{%s}")
                  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                  ("\\paragraph{%s}" . "\\paragraph*{%s}")
                  ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
#+end_src

** ORG-MODE
:PROPERTIES:
:header-args: :tangle config.el
:END:

Here we set up different setting for working in org-mode.
 + The default directories for org files and agenda are change to '~/org/' and '~/org/agenda/' respectively.
 + The default keywords are changed and some more are added.
 + Some identation is made in order to make everything look neat.

#+begin_src emacs-lisp
(add-hook 'org-mode-hook 'org-indent-mode))
  (setq org-directory "~/org/"
        org-agenda-files '("~/org/agenda/")
        org-log-done 'time)
  (setq org-todo-keywords '((sequence "TODO(t)" "PROJ(P)" "PAR(p)" "FINAL(f)" "LAB(l)" "EXP(e)" "CANCELLED(c)" "CLASS(C)" "|")))
  (setq org-src-preserve-indentation nil
        org-src-tab-acts-natively t
        org-edit-src-content-indentation 0)
#+end_src

Latex text highlight is enabled:

#+begin_src emacs-lisp
(setq org-highlight-latex-and-related '(latex))
#+end_src

The asterics are changed to UTF-8 bullets with the 'org-superstar' package:

#+begin_src emacs-lisp
(use-package org-superstar
  :config
  (add-hook 'org-mode-hook (lambda () (org-superstar-mode 1))))
#+end_src

And the following is the standar configuration for org-roam. Org Roam is an excellent tool for writing and organizing your thoughts, but when you leverage more of the functions it provides, you can create highly efficient custom workflows for common tasks.

#+begin_src emacs-lisp
(use-package org-roam
  :ensure t
  :init
  (setq org-roam-v2-ack t)
  :custom
  (org-roam-directory "~/org/roam/")
  (org-roam-completion-everywhere t)
  :bind (("C-c n l" . org-roam-buffer-toggle)
         ("C-c n f" . org-roam-node-find)
         ("C-c n i" . org-roam-node-insert)
         :map org-mode-map
         ("C-M-i" . completion-at-point)
         :map org-roam-dailies-map
         ("Y" . org-roam-dailies-capture-yesterday)
         ("T" . org-roam-dailies-capture-tomorrow))
  :bind-keymap
  ("C-c n d" . org-roam-dailies-map)
  :config
  (require 'org-roam-dailies) ;; Ensure the keymap is available
  (org-roam-db-autosync-mode))
#+end_src

** SNIPPETS
:PROPERTIES:
:header-args: :tangle config.el
:END:

The package to create and edit snippets is called 'yasnippets'.

#+begin_src emacs-lisp
(use-package yasnippet
  :config
  (add-to-list 'load-path
               "~/.doom.d/snippets/")
  (yas-global-mode 1))
#+end_src

